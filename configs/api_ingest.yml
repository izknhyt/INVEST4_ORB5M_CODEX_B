# Price ingestion API provider configuration
#
# Each provider block defines how to query an upstream REST endpoint and how to
# normalize the payload into bar records understood by `scripts/pull_prices.py`.
# The defaults target Alpha Vantage's FX_INTRADAY endpoint, but the schema is
# flexible enough for other JSON-based providers.

version: 1
lookback_minutes: 120
activation_criteria:
  target_cost_ceiling_usd: 40
  minimum_free_quota_per_day: 500
  retry_budget_per_run: 15
credential_rotation:
  cadence_days: 90  # Placeholder cadence; update once contract is confirmed.
  next_rotation_at: null  # ISO8601 timestamp for the upcoming rotation window.
  last_rotated_at: null  # Set when the rotation is completed.
  owner: "ops-team"  # Primary contact responsible for the credential vault entry.
  storage_reference: "vault://api/alpha_vantage"  # Point to the encrypted secret store location.
  notes:
    - "Record rotation events in docs/checklists/p1-04_api_ingest.md with date and reviewer."
    - "Sync environment variables and configs/api_keys.yml after each rotation."
providers:
  alpha_vantage:
    description: "Alpha Vantage FX_INTRADAY (free tier)"
    activation_status: hold
    activation_notes:
      - "2025-10: FX_INTRADAY requires Premium (>=49.99 USD/month) so free tier no longer applies."
      - "Free quota observed at 5 req/min and ~500 req/day but blocked for FX symbols without Premium entitlement."
    base_url: "https://www.alphavantage.co/query"
    method: GET
    query:
      function: FX_INTRADAY
      from_symbol: "{base}"
      to_symbol: "{quote}"
      interval: "{interval}"
      outputsize: compact
      datatype: json
      apikey: "{api_key}"
    tf_map:
      "1m": "1min"
      "5m": "5min"
      "15m": "15min"
      "60m": "60min"
    credentials:
      - api_key
    response:
      format: json
      data_path:
        - "Time Series FX ({interval})"
      entry_type: mapping
      timestamp_field: key
      fields:
        o: "1. open"
        h: "2. high"
        l: "3. low"
        c: "4. close"
        v: null
        spread: null
      timestamp_formats:
        - "%Y-%m-%d %H:%M:%S"
        - "%Y-%m-%dT%H:%M:%S"
      timezone: UTC
    rate_limit:
      max_requests_per_minute: 5
      max_requests_per_day: 500
      cooldown_seconds: 12
    retry:
      attempts: 5
      backoff_seconds: 2
      multiplier: 2
      max_backoff_seconds: 32
      retryable_statuses: [429, 500, 502, 503, 504]
      error_keys:
        - "Error Message"
        - "Note"
  twelve_data:
    description: "Twelve Data FX time_series (free tier candidate)"
    activation_status: candidate
    activation_notes:
      - "Free plan tested at 8 req/min and 800 req/day; intraday history available for ~30 days with 2 active symbols."
      - "Quotes returned in UTC with \"values\" array; requires EUR/USD-style symbol with slash separator."
    base_url: "https://api.twelvedata.com/time_series"
    method: GET
    query:
      symbol: "{base}/{quote}"
      interval: "{interval}"
      outputsize: 120
      format: JSON
      apikey: "{api_key}"
    tf_map:
      "1m": "1min"
      "5m": "5min"
      "15m": "15min"
      "60m": "1h"
    credentials:
      - api_key
    response:
      format: json
      data_path:
        - values
      entry_type: sequence
      timestamp_field: datetime
      fields:
        o: open
        h: high
        l: low
        c: close
        v: volume
        spread: null
      timestamp_formats:
        - "%Y-%m-%d %H:%M:%S"
      timezone: UTC
    rate_limit:
      max_requests_per_minute: 8
      max_requests_per_day: 800
      cooldown_seconds: 8
    retry:
      attempts: 5
      backoff_seconds: 2
      multiplier: 2
      max_backoff_seconds: 16
      retryable_statuses: [429, 500, 502, 503, 504]
      error_keys:
        - status
